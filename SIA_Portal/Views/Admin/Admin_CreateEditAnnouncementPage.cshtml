@model SIA_Portal.Models.AdminModels.CreateEditAnnouncementModel
@using SIA_Portal.Constants;
@{
    ViewBag.Title = "Admin_CreateEditAnnouncementPage";
    Layout = "~/Views/Shared/Shared_NavBar.cshtml";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ"
            crossorigin="anonymous"></script>

    <script src="//code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script>

    <!-- Google Fonts CDN -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap"
          rel="stylesheet" />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/Res/Css/forms_styles.css" type="text/css" />
    <title>@Model.GetHeaderToDisplay()</title>


    <script src="//code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('#AddCatToCurrCats').click(function () {
                $("#DivisionNameList > option:selected").each(function () {
                    $(this).appendTo("#InputAccountDivisionNameList");
                });
            });

            $('#DeleteCatFromCurrCats').click(function () {
                $("#InputAccountDivisionNameList > option:selected").each(function () {
                    $(this).remove().appendTo("#DivisionNameList");
                });


                $("#InputAccountDivisionNameList option").prop("selected", true);
            });

            //
        })
    </script>

</head>


<body>
    <main>
        @using (Html.BeginForm(ActionNameConstants.ADMIN_SIDE__CREATE_EDIT_ANNOUNCEMENT_PAGE__EXECUTE_ACTION, ControllerNameConstants.ADMIN_CONTROLLER_NAME,
            FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.AnnouncementId)

        <div class="form-wrapper">
            <p>@Model.GetHeaderToDisplay()</p>

            <fieldset class="announcement-info" style="box-sizing:border-box">
                <legend>Announcement Info:</legend>
                <div class="title-wrapper">
                    <label for="title">Title</label>
                    @Html.TextBoxFor(m => m.InputTitle, new { autocomplete = "off" })
                    <br />
                    @Html.ValidationMessageFor(m => m.InputTitle, "", new { @class = "text-danger", @style = "color:darkred" })

                </div>
                <div class="main-image-wrapper">
                    <label for="lname">Main Image: </label>
                    <!--
            <input id="fileInput" type="file" style="display:none;" />
            <input type="button" class="button-wrapper" value="Select Image..." onclick="document.getElementById('fileInput').click();" />
            -->
                    <input type="file" name="InputImage" id="InputImage" onchange="fileCheck(this);" />

                    @if (Model.AnnouncementImagePath != null)
                    {

                        <img src="@Url.Content(Model.AnnouncementImagePath)" alt="Announcement Image" />

                        <!--
                <div class="box"></div>
                -->
                    }


                </div>


            </fieldset>


            <fieldset class="announcement-content">
                <legend>Announce To Divisions</legend>
                <div class="text-content-wrapper" style="display: flex; justify-content: space-around">
                    <div class="col-4">
                        <div class="row">
                            <p>Available Divisions:</p>
                            @Html.ListBoxFor(m => m.DivisionNameList, new SelectList(Model.DivisionNameList), new { @id = "DivisionNameList" })

                            <br /><br />
                            <button type="button" name="executeCategoryAction" id="AddCatToCurrCats" value="AddCatToCurrCats">Add Selected Division</button>

                        </div>
                    </div>
                    <br /><br /><br />
                    <div class="col-4">
                        <div class="row">
                            <p>Current Divisions:</p>
                            @Html.ListBoxFor(m => m.InputAccountDivisionNameList, new SelectList(Model.InputAccountDivisionNameList), new { @id = "InputAccountDivisionNameList" })

                            <br /><br />
                            <button type="button" name="executeCategoryAction" id="DeleteCatFromCurrCats" value="DeleteCatFromCurrCats">Remove Selected Division</button>
                        </div>
                    </div>
                </div>
            </fieldset>

            <fieldset class="announcement-content">
                <legend>Announcement Content:</legend>
                <div class="text-content-wrapper">
                    @Html.TextAreaFor(m => m.InputContent, new { @rows = 5, @cols = 40 })
                </div>
            </fieldset>

            <br />
            @{

                bool toShow = false;
                string colorToUse = "";

                if (Model.ActionExecuteStatus == ActionStatusConstants.STATUS_FAILED)
                {
                    toShow = true;
                    //colorToUse = "color:darkred";
                }
                else if (Model.ActionExecuteStatus == ActionStatusConstants.STATUS_SUCCESS)
                {
                    toShow = true;
                    //colorToUse = "color:green";
                }
                colorToUse = ActionStatusConstants.GetColorAsStringAssociatedWithStatus(Model.ActionExecuteStatus);

                if (toShow)
                {
                    <center>
                        <p style="@colorToUse">@Model.StatusMessage</p>
                    </center>
                }

            }
            <br />

            <div class="button-wrapper">
                <button type="submit" name="executeAction" value="SaveChanges">@Model.GetButtonTextDisplay()</button>
            </div>
            <br />
            <br />
            <br />
        </div>
        }
    </main>
</body>
</html>
